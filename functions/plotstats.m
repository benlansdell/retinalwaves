function plotstats(strpts, endpts, wavesizes, wavedurs, wavespds, iwis, basename)
        % plotstats     Function to plot distributions of wave properites. All of the inputs can be computed using wavedata().
        %
        % Usage:
        %                       plotstats(strpts, endpts, wavesizes, wavedurs, wavespds, iwis, basename)
	%		OR	plotstats(savedstats, basename);
        %
        % Input:
        %			strpts = nx2 matrix listing the x and y coordinates of initiation points of waves
	%			endpts = nx2 matrix listing the x and y coordinates of the ending points of waves
	%			wavesizes = list of observed wave sizes in simulation
	%			wavedurs = list of observed wave durations in simulation
	%			wavespds = list of observed wave speeds in simulation
	%			iwis = list of observed interwave-intervals in simulation
	%			basename = base of filename to save each plot to. note that mean, std and number of data points are
	%				attached to the filename
	%		OR
	%			savedstats = .mat file containing the above variables generated by savestats.m
	%
        % Output:
        %
        % Example(s):
        %                       params = parameters('ml_sahp', 'homog');
        %                       sol = retinal2D_split(params);
        %                       counts = wavecounts(sol, params);
        %                       [strpts, endpts, wavesizes, wavedurs, wavespds, iwis] = wavedata(counts, params);
	%			plotstats(strpts, endpts, wavesizes, wavedurs, wavespds, iwis, './plots/test');

	if nargin == 2
		basename = endpts;
		load(strpts);
	end

	%strpts, endpts, wavesizes, wavedurs, wavespds, iwis, collidedspds, maxspds, maxcollidedspds

	clf;
	x = 0.001:0.01:0.151;
	n_elements = histc(wavesizes,x);
	if ~isempty(n_elements)
		f = polyfit(log10(x(1:end-1)),log10(n_elements(1:end-1)'),1);
		coeffdet(log10(x(1:end-1)),log10(n_elements(1:end-1)'));
		loglog(x, n_elements, '.', x(1:end-1), 10^f(2)*x(1:end-1).^f(1), 'LineWidth', 2, 'MarkerSize', 20);
		%set(gca,'YTickLabel',num2str(ch'), 'FontSize',4)
		%loglog(x, n_elements);
		xlabel('wave size (mm^2)', 'FontSize', 20)
		ylabel('# waves', 'FontSize', 20)
		saveplot(gcf, [basename '_wavesizes_mean_log' num2str(mean(wavesizes)) '_std_' num2str(std(wavesizes)) '_n_' num2str(length(wavesizes)) '.eps'])
		figure
	        lsqr = polyfit(wavedurs, wavesizes, 1);
	        plot(wavedurs, wavesizes, '.', wavedurs, lsqr(1)*wavedurs+lsqr(2))
	        xlabel('wave duration (s)')
	        ylabel('wave size (mm^2)')
	        %title(['lsqr slope = ' num2str(lsqr(1)) ' intercept = ' num2str(lsqr(2))])
	        saveplot(gcf, [basename '_size_vs_duration.eps'])
	end
	nhist(wavesizes, 'noerror');
	set(gca, 'yscale', 'linear');
	set(gca, 'xscale', 'linear');
	xlabel('wave size (mm^2)')
	%title(['mean = ' num2str(mean(wavesizes)) ' std = ' num2str(std(wavesizes)) ' n = ' num2str(length(wavesizes))]);
	saveplot(gcf, [basename '_wavesize.eps'])
	%nhist(log(wavedurs))
	nhist(wavedurs, 'noerror');
	xlabel('wave duration (s)')
	%title(['mean = ' num2str(mean(wavedurs)) ' std = ' num2str(std(wavedurs)) ' n = ' num2str(length(wavedurs))]);
	saveplot(gcf, [basename '_wavedurs.eps'])
	%nhist(log(wavespds))
	nhist(wavespds, 'noerror');
	xlabel('wave speed (mm/s)')
	%title(['mean = ' num2str(mean(wavespds)) ' std = ' num2str(std(wavespds)) ' n = ' num2str(length(wavespds))])
	saveplot(gcf, [basename '_wavespds.eps'])
	nhist(iwis, 'noerror');
	set(gca, 'xscale', 'linear');
	set(gca, 'yscale', 'linear');
	xlabel('interwave interval (s)')
	%title(['mean = ' num2str(mean(iwis)) ' std = ' num2str(std(iwis)) ' n = ' num2str(length(iwis))]);
	saveplot(gcf, [basename '_iwis.eps'])
end	
